import pygame
import random
import sys
from pygame.locals import *

WIDTH, HEIGHT = 800, 600
FPS = 60

pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Fase 2 - Game of Thrones")

WHITE = (255, 255, 255)
BROWN = (139, 69, 19)
RED = (255, 0, 0)
BLACK = (0, 0, 0)

background_image = pygame.image.load('assets/fase_2/norte_png.png').convert()
background_image = pygame.transform.scale(background_image, (WIDTH, HEIGHT))

character_images = {
    'Daenerys': pygame.image.load('assets/fase_1/draca.png').convert_alpha(),
    'Jon': pygame.image.load('assets/fase_1/snow.png').convert_alpha(),
    'Stannis': pygame.image.load('assets/fase_1/Stannis baratheon.png').convert_alpha()
}

enemy_image = pygame.image.load('assets/fase_2/kingslayer.png').convert_alpha()

class Projectile(pygame.sprite.Sprite):
    def __init__(self, image, start_pos, target, speed):
        super().__init__()
        self.image = pygame.Surface((10, 10))
        self.image.fill(RED)
        self.rect = self.image.get_rect(center=start_pos)
        self.target = target
        self.speed = speed

        direction = pygame.math.Vector2(target.rect.center) - pygame.math.Vector2(start_pos)
        self.velocity = direction.normalize() * self.speed

    def update(self):
        self.rect.x += self.velocity.x
        self.rect.y += self.velocity.y

        if self.rect.colliderect(self.target.rect):
            self.target.health -= 1
            self.kill()

class Character(pygame.sprite.Sprite):
    def __init__(self, image, x, y):
        super().__init__()
        self.original_image = image
        self.image = pygame.transform.scale(self.original_image, (80, 80))
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
        self.speed = 3
        self.health = 3
        self.last_shot_time = 0

    def update(self):
        keys = pygame.key.get_pressed()
        if keys[K_LEFT]:
            self.rect.x -= self.speed
        if keys[K_RIGHT]:
            self.rect.x += self.speed
        if keys[K_UP]:
            self.rect.y -= self.speed
        if keys[K_DOWN]:
            self.rect.y += self.speed
        if keys[K_k]:
            self.attack(enemy)

    def attack(self, target):
        current_time = pygame.time.get_ticks()
        if current_time - self.last_shot_time >= 500:
            projectile = Projectile(self.image, self.rect.center, target, speed=4)
            all_sprites.add(projectile)
            projectiles.add(projectile)
            self.last_shot_time = current_time

class Enemy(pygame.sprite.Sprite):
    def __init__(self, image, x, y):
        super().__init__()
        self.original_image = image
        self.image = pygame.transform.scale(self.original_image, (150, 150))
        self.rect = self.image.get_rect()
        self.rect.center = (x, y)
        self.speed = 1.5
        self.health = 15
        self.attack_cooldown = 0

    def update(self):
        player_dist = pygame.math.Vector2(player.rect.center) - pygame.math.Vector2(self.rect.center)
        if player_dist.length() > 180:
            self.rect.x += self.speed if player_dist.x > 0 else -self.speed
            self.rect.y += self.speed if player_dist.y > 0 else -self.speed

        if self.attack_cooldown == 0:
            self.attack_cooldown = 180
            self.attack(player)
        else:
            self.attack_cooldown -= 1

    def attack(self, target):
        projectile = Projectile(self.image, self.rect.center, target, speed=6)
        all_sprites.add(projectile)
        projectiles.add(projectile)

def show_intro():
    intro_font = pygame.font.Font(pygame.font.match_font('gabriola'), 25)
    button_font = pygame.font.Font(pygame.font.match_font('gabriola'), 20)

    intro_text = intro_font.render("Este é o Kingslayer, mate-o para provar que é merecedor do trono de ferro,", True, WHITE)
    intro_text_2 = intro_font.render("ou morra nas mãos dele", True, WHITE)
    button_text = button_font.render("OK", True, WHITE)

    text_rect = intro_text.get_rect(center=(WIDTH // 2, HEIGHT // 2 - 50))
    text_rect_2 = intro_text_2.get_rect(center=(WIDTH // 2, HEIGHT // 2 - 20))
    button_rect = pygame.Rect(0, 0, 80, 40)
    button_rect.center = (WIDTH // 2, HEIGHT // 2 + 50)

    while True:
        screen.blit(background_image, (0, 0))
        pygame.draw.rect(screen, BROWN, (WIDTH // 2 - 300, HEIGHT // 2 - 100, 600, 150))
        screen.blit(intro_text, text_rect)
        screen.blit(intro_text_2, text_rect_2)
        pygame.draw.ellipse(screen, BLACK, button_rect)
        screen.blit(button_text, button_rect.move(27, 10))

        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()
            elif event.type == MOUSEBUTTONDOWN and button_rect.collidepoint(event.pos):
                return

        pygame.display.flip()

def show_end_screen(message):
    end_font = pygame.font.Font(pygame.font.match_font('gabriola'), 40)
    end_text = end_font.render(message, True, WHITE)
    text_rect = end_text.get_rect(center=(WIDTH // 2, HEIGHT // 2))

    while True:
        screen.fill(BLACK)
        screen.blit(end_text, text_rect)

        for event in pygame.event.get():
            if event.type == QUIT or event.type == KEYDOWN:
                pygame.quit()
                sys.exit()

        pygame.display.flip()

def fase_2(character_choice):
    clock = pygame.time.Clock()

    global player, enemy, all_sprites, projectiles
    all_sprites = pygame.sprite.Group()
    enemies = pygame.sprite.Group()
    projectiles = pygame.sprite.Group()

    show_intro()

    player = Character(character_images[character_choice], WIDTH // 2, HEIGHT - 50)
    all_sprites.add(player)

    enemy = Enemy(enemy_image, random.randint(WIDTH, WIDTH + 100), random.randint(50, 200 - 50))
    all_sprites.add(enemy)
    enemies.add(enemy)

    enemy_defeated = False

    running = True
    while running:
        for event in pygame.event.get():
            if event.type == QUIT:
                pygame.quit()
                sys.exit()

        all_sprites.update()

        if player.health <= 0:
            show_end_screen("Você perdeu!")
            running = False
        elif enemy.health <= 0 and not enemy_defeated:
            print("Inimigo derrotado!")
            enemy.kill()
            enemy_defeated = True
            show_end_screen("Você venceu!")
            running = False

        screen.blit(background_image, (0, 0))
        all_sprites.draw(screen)

        pygame.display.flip()
        clock.tick(FPS)

    pygame.quit()

fase_2('Daenerys')
